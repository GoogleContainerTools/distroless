schemaVersion: "1.0.0"
commandTests:
  - name: hello
    command: ["/usr/bin/python2.7", "-c", "print 'Hello World'"]
    expectedOutput: ['Hello World']
  # parts of the standard library assume /bin/sh exists via os.system and subprocess.Popen
  - name: use_shell
    command: ["/usr/bin/python2.7", "-c",
      "import subprocess, sys; subprocess.check_call(sys.executable + ' -h', shell=True)"]
  # libraries like gunicorn and monotonic call glibc functions using ctypes
  - name: use_ctypes_glibc
    command: ["/usr/bin/python2.7", "-c", "import ctypes.util; ctypes.CDLL(ctypes.util.find_library('rt')).timer_create"]
    exitCode: 0

  # file names are UTF-8: default for modern Linux systems
  # The \xe9 backslash must be double-escaped to avoid YAML string parsing weirdness
  - name: filesystem_utf8
    command: ["/usr/bin/python2.7", "-c", "open(u'h\\xe9llo.txt', 'w'); import sys; print(sys.getfilesystemencoding())"]
    expectedOutput: ['UTF-8']

  # the print function should output UTF-8
  - name: print_utf8
    command: ["/usr/bin/python2.7", "-c", "print(u'h\\xe9llo.txt')"]
    expectedOutput: ['h\xe9llo']

  # import every module installed with the Python package
  - name: import_everything
    exitCode: 0
    command:
      - "/usr/bin/python2.7"
      - "-c"
      # multi-line YAML string with Python script that imports all modules that are installed.
      # This ensures we have the right native library dependencies.
      - |
        import pkgutil

        skip_modules = frozenset((
          # Windows-specific modules
          'ctypes.wintypes',
          'distutils.command.bdist_msi',
          'distutils.msvc9compiler',
          'encodings.mbcs',

          # depends on things not installed by default on Debian
          'lib2to3.pgen2.conv',
          '_LWPCookieJar',
          '_MozillaCookieJar',
        ))

        def onerror(failed_module_name):
          # ignore any errors from modules we are explicitly skipping (e.g. tkinter)
          if failed_module_name in skip_modules:
            return
          raise Exception('failed to import module: {}'.format(repr(failed_module_name)))

        for module_info in pkgutil.walk_packages(onerror=onerror):
          # TODO: use module_info.name when Debian9 support is dropped
          module_name = module_info[1]
          # idlelib on Python3.5 depends on tkinter which is not installed by default
          if module_name in skip_modules or module_name.endswith('.__main__'):
            continue

          try:
            __import__(module_name)
          except ImportError as e:
            # ignore tkinter import errors: there are so many
            if 'No module named _tkinter' in str(e):
              continue
            raise
          print('imported {}'.format(module_name))
